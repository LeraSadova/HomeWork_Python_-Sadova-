#Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат
#Для того, чтобы не вносить 8 раз в каждую из предикат новое значение принято следующее решение:
#+ число комбинаций для трех переменных равно 2^3 = 8
def Truth ():
    result = 0
    for n in range(0, 8):
        num = bin(n)
        num = num.replace('b', '0')
        X = int(num[-3])
        Y = int(num[-2])
        Z = int(num[-1])
        left_part = not(X or Y or Z)
        right_part = (not X) and (not Y) and (not Z)
        if left_part == right_part:
            result += 1
        print(X, Y, Z, left_part, right_part, left_part == right_part, result)
    print()
    if result == 8:
        return print(True)
    else:
        return print(False)

Truth()
#+ эти комбинации соответствуют бинарному представлению десятичных чисел от 0 до 7
#+ в цикле перводим числа от 0 до 7 в двоичную систему
#+ далее с помощью `replace` заменяем символ `b` на `0`.
#+ приравниваем и переводим в целочисленный тип данных к X третий элемент с конца, Y - второй, и Z - первый.
#+ определяем истинной или ложность левой и правой половины утверждения
#+ сравниваем их, и если они соответсуют друг другу, то переменную `result` увеличиваем на 1
#+ так как истина должна получатся при всех возможных значениях предикат, 
# то `result` должен быть равен 8, что и отображено в коде.